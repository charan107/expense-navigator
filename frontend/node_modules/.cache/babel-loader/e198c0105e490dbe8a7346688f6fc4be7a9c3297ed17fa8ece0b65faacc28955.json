{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csai4\\\\Desktop\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Add Income\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    // Only update the incomes list when income is added\n    getIncomes();\n  };\n\n  // Get Incomes\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n  };\n\n  // Add Expense\n  const addExpense = async expense => {\n    const response = await axios.post(`${BASE_URL}add-expense`, expense).catch(err => {\n      setError(err.response.data.message);\n    });\n    // Only update the expenses list when expense is added\n    getExpenses();\n  };\n\n  // Get Expenses\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(expense => {\n      totalExpenses = totalExpenses + expense.amount;\n    });\n    return totalExpenses;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","addExpense","expense","getExpenses","totalIncome","forEach","amount","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","deleteIncome","deleteExpense","useGlobalContext"],"sources":["C:/Users/csai4/Desktop/EXPENSE-TRACKER/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({children}) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Add Income\n    const addIncome = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-income`, income)\n            .catch((err) => {\n                setError(err.response.data.message);\n            });\n        // Only update the incomes list when income is added\n        getIncomes();\n    };\n\n    // Get Incomes\n    const getIncomes = async () => {\n        const response = await axios.get(`${BASE_URL}get-incomes`);\n        setIncomes(response.data);\n    };\n\n    // Add Expense\n    const addExpense = async (expense) => {\n        const response = await axios.post(`${BASE_URL}add-expense`, expense)\n            .catch((err) => {\n                setError(err.response.data.message);\n            });\n        // Only update the expenses list when expense is added\n        getExpenses();\n    };\n\n    // Get Expenses\n    const getExpenses = async () => {\n        const response = await axios.get(`${BASE_URL}get-expenses`);\n        setExpenses(response.data);\n    };\n\n    const totalIncome = () => {\n        let totalIncome = 0;\n        incomes.forEach((income) => {\n            totalIncome = totalIncome + income.amount;\n        });\n        return totalIncome;\n    };\n\n    const totalExpenses = () => {\n        let totalExpenses = 0;\n        expenses.forEach((expense) => {\n            totalExpenses = totalExpenses + expense.amount;\n        });\n        return totalExpenses;\n    };\n\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt);\n        });\n\n        return history.slice(0, 3);\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            expenses,\n            totalIncome,\n            addExpense,\n            getExpenses,\n            deleteExpense,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}