{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csai4\\\\Videos\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport styled from \"styled-components\";\nimport bg from './img/bg.png';\nimport { MainLayout } from './styles/Layouts';\nimport Orb from './Components/Orb/Orb';\nimport Navigation from './Components/Navigation/Navigation';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Income from './Components/Income/Income';\nimport Expenses from './Components/Expenses/Expenses';\nimport { useGlobalContext } from './context/globalContext';\nimport SignupPage from './Components/SignupPage/SignupPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [active, setActive] = useState(1);\n  const [isSignedIn, setIsSignedIn] = useState(false); // Track the user's sign-in status\n  const [user, setUser] = useState(null); // Store user information after sign-up\n\n  // Accessing global context for income/expense data\n  const global = useGlobalContext();\n  console.log(global);\n\n  // Function to handle successful sign-up\n  const handleSignUp = userInfo => {\n    setUser(userInfo);\n    setIsSignedIn(true);\n  };\n\n  // Function to handle sign-out\n  const handleSignOut = () => {\n    setUser(null);\n    setIsSignedIn(false);\n  };\n\n  // Function to display content based on active state\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      // You can customize this based on your actual content for case 2\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Income, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Expenses, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Memoizing the Orb component to avoid unnecessary re-renders\n  const orbMemo = useMemo(() => /*#__PURE__*/_jsxDEV(Orb, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 33\n  }, this), []);\n  return /*#__PURE__*/_jsxDEV(AppStyled, {\n    bg: bg,\n    className: \"App\",\n    children: [orbMemo, /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        active: active,\n        setActive: setActive,\n        handleSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: !isSignedIn ? /*#__PURE__*/_jsxDEV(SignupPage, {\n          onSignUp: handleSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : displayData() // Show dashboard, income, or expenses based on the active state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nV5sOvIBWThKhWwHBFzJglbm+QY=\", false, function () {\n  return [useGlobalContext];\n});\n_c = App;\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${props => props.bg});\n  position: relative;\n  main {\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #FFFFFF;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n  }\n`;\n_c2 = AppStyled;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppStyled\");","map":{"version":3,"names":["React","useState","useMemo","styled","bg","MainLayout","Orb","Navigation","Dashboard","Income","Expenses","useGlobalContext","SignupPage","App","active","setActive","isSignedIn","setIsSignedIn","user","setUser","global","console","log","handleSignUp","userInfo","handleSignOut","displayData","orbMemo","AppStyled","div","props"],"sources":["C:/Users/csai4/Videos/EXPENSE-TRACKER/frontend/src/App.js"],"sourcesContent":["import React, { useState, useMemo } from 'react'\nimport styled from \"styled-components\";\nimport bg from './img/bg.png'\nimport { MainLayout } from './styles/Layouts'\nimport Orb from './Components/Orb/Orb'\nimport Navigation from './Components/Navigation/Navigation'\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Income from './Components/Income/Income'\nimport Expenses from './Components/Expenses/Expenses';\nimport { useGlobalContext } from './context/globalContext'\nimport SignupPage from './Components/SignupPage/SignupPage'\n\nfunction App() {\n  const [active, setActive] = useState(1);\n  const [isSignedIn, setIsSignedIn] = useState(false); // Track the user's sign-in status\n  const [user, setUser] = useState(null); // Store user information after sign-up\n\n  // Accessing global context for income/expense data\n  const global = useGlobalContext();\n  console.log(global);\n\n  // Function to handle successful sign-up\n  const handleSignUp = (userInfo) => {\n    setUser(userInfo);\n    setIsSignedIn(true);\n  }\n\n  // Function to handle sign-out\n  const handleSignOut = () => {\n    setUser(null);\n    setIsSignedIn(false);\n  }\n\n  // Function to display content based on active state\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return <Dashboard />;\n      case 2:\n        return <Dashboard />; // You can customize this based on your actual content for case 2\n      case 3:\n        return <Income />;\n      case 4:\n        return <Expenses />;\n      default:\n        return <Dashboard />;\n    }\n  };\n\n  // Memoizing the Orb component to avoid unnecessary re-renders\n  const orbMemo = useMemo(() => <Orb />, []);\n\n  return (\n    <AppStyled bg={bg} className=\"App\">\n      {orbMemo}\n      <MainLayout>\n        <Navigation active={active} setActive={setActive} handleSignOut={handleSignOut} />\n        <main>\n          {/* If not signed in, show the signup form */}\n          {!isSignedIn ? (\n            <SignupPage onSignUp={handleSignUp} />\n          ) : (\n            displayData() // Show dashboard, income, or expenses based on the active state\n          )}\n        </main>\n      </MainLayout>\n    </AppStyled>\n  );\n}\n\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${props => props.bg});\n  position: relative;\n  main {\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #FFFFFF;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n  }\n`;\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}